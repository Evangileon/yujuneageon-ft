/* Battlestar TUX
 * Copyright (C) 2010 Eliot Eshelman <battlestartux@6by9.net>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#include <map>
#include <sstream>

#include "UniqueNames.h"


const std::string DEFAULT_NAME_PREFIX = "AutoGeneratedName";
UniqueNames::NameCountMap UniqueNames::s_nameCount;


UniqueNames::UniqueNames() {}
UniqueNames::~UniqueNames() {}


std::string UniqueNames::Next()
{
    return Next(DEFAULT_NAME_PREFIX);
}


std::string UniqueNames::Next(const std::string& prefix)
{
    if (s_nameCount.count(prefix) == 0)
        s_nameCount[prefix] = 0;

    std::stringstream ss;
    ss << prefix << "_" << s_nameCount[prefix]++;
    return ss.str();
}


size_t UniqueNames::Count()
{
    size_t count = Count(DEFAULT_NAME_PREFIX);
    return count;
}


size_t UniqueNames::Count(const std::string& prefix)
{
    size_t count = (s_nameCount.count(prefix) == 0)?0:s_nameCount[prefix];
    return count;
}

